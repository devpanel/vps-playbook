#!/bin/sh
set -e

TMP_DIR="/tmp"
DEPLOY_DIR="$APP_ROOT/.devpanel/vps"

echo "sudo apt-get install -y rsync ssh zip"
sudo apt-get update
sudo apt-get install -y rsync ssh
cd $TMP_DIR;

{% if appContainerName == 'php' %}
  # Mysql run on php container only
  {% if onDatabase %}
    if [ ! -d $DEPLOY_DIR ]; then
      echo "$DEPLOY_DIR is not exist, creating $DEPLOY_DIR";
      mkdir -p $DEPLOY_DIR/dumps;
    fi
    echo "Dump database to $APP_ROOT/.devpanel/vps/dumps/db.sql.gz"
    mysqldump -h$DB_HOST -P$DB_PORT -u$DB_USER -p$DB_PASSWORD $DB_NAME > $TMP_DIR/db.sql --no-tablespaces
    tar czf $DEPLOY_DIR/dumps/db.sql.tgz -C $TMP_DIR db.sql

cat << EOF > $DEPLOY_DIR/vps-deploy.sh
#!/bin/bash
if [[ \$(mysql -h\$DB_HOST -P\$DB_PORT -u\$DB_USER -p\$DB_PASSWORD \$DB_NAME -e "show tables;") == '' ]]; then
  SQLFILE=db.sql
  tar xzf $DEPLOY_DIR/db.sql.tgz -C /tmp/
  mysql -h\$DB_HOST -P\$DB_PORT -u\$DB_USER -p\$DB_PASSWORD \$DB_NAME < /tmp/\$SQLFILE
  rm -rf $DEPLOY_DIR
fi
EOF

  {% endif %}
{% endif %}

{% if onSourceCode %}
if [ -f /tmp/tmp_key ]; then
	echo "Remove temorary key"
	sudo rm /tmp/tmp_key;
fi

echo "Generate temporary key to connect to the VPS...";
echo "{{ vps.privKey }}" > /tmp/tmp_key;
chmod 0400 /tmp/tmp_key;

echo "Moving file from container to VPS..."
echo "rsync --timeout=1800 -azh -e "ssh -o StrictHostKeyChecking=no -i /tmp/tmp_key" $APP_ROOT {{ vps.username }}@{{ vps.publicIpAddress }}:{{ dest }};"
sudo rsync --timeout=1800 -azh -e "ssh -o StrictHostKeyChecking=no -i /tmp/tmp_key" $APP_ROOT/. {{ vps.username }}@{{ vps.publicIpAddress }}:{{ dest }};
echo "Done"

echo "Remove temorary key"
sudo rm /tmp/tmp_key;
sudo rm -rf $DEPLOY_DIR
{% endif %}

{% if appContainerName == 'php' %}
  # Mysql run on php container only
	{% if onDatabase %}
	echo "Remove db file"
	rm $TMP_DIR/db.sql
	{% endif %}
{% endif %}
